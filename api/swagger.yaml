openapi: 3.0.0
info:
  title: Invoice Api
  description: API for system that users can create and validate invoices
  version: 1.0.0

components:
  schemas:
    client:
      type: object
      properties:
        name:
          type: string
    business:
      type: object
      properties:
        busBsb:
          type: string
          nullable: true
          description: "bsb number"
        busAccNo:
          type: string
          nullable: true
          description: "Bank account number"
        busAccName:
          type: string
          nullable: true
          description: "Account name"
        busReference:
          type: string
          nullable: true
          description: "Payment reference"
        busBpay:
          type: string
          nullable: true
          description: "BPAY"
        busName:
          type: string
          description: "Business name"
        busAbn:
          type: string
          nullable: true
          description: "Australian Business Number (ABN)"
      required:
        - busName
    invoice:
      type: object
      properties:
        invoiceNo:
          type: string
        date:
          type: string
          format: date-time
        productDetails:
          type: string
        productFee:
          type: number
        productGst:
          type: number
        productTotal:
          type: number
        business:
          $ref: "#/components/schemas/business"
          nullable: true
        client:
          $ref: "#/components/schemas/client"
          nullable: true

        


paths:
  /users/signup:
    post:
      summary: Registers a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: 'Signup successful'
        '400':
          description: |
            Invalid email
            Invalid password 
              - Minimum length of 8 characters, at least one uppercase, one number, and one special character
            username/email unavailable
            Missing fields


  /users/login:
    post:
      summary: Logs a user in
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: |
            Incorrect password 
            Missing fields
        '404':
          description: User doesn't exist


  /users/signout:
    post:
      summary: Logs a user out
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logged out
        '401':
          description: Unauthorised

  /users/info:
    get:
      summary: Gets user info 
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User info retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  email:
                    type: string
                  businesses:
                    type: array
                    items:
                      $ref: "#/components/schemas/business"
        '401':
          description: Unauthorised
    put:
      summary: Updates user info
      tags:
        - Users
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              anyOf:
                - required: [username]
                - required: [email]
                - required: [password]
      responses:
        '200':
          description: Successfully updated user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: |
            - No user info changed
            - Username already exists
            - Email is already being used
            - New username/email/password should not be current username/email/password
            - Invalid email/password
        '401':
          description: Unauthorised
        '404':
          description: User doesn't exist

  /invoiceV2/parseOrder2json:
    post:
      summary: Converts order XML to JSON
      tags:
        - invoiceV2
      description: Parses the given XML string for an order and returns a structured JSON response with details like order ID, issue date, start and end dates, supplier, customer, currency, total amount, and items.
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: string
              description: Order XML document to be parsed.
      responses:
        200:
          description: Successfully converted XML to JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The unique order identifier.
                    example: "AEG012345"
                  issueDate:
                    type: string
                    format: date
                    description: The date the order was issued.
                    example: "2005-06-20"
                  startDate:
                    type: string
                    format: date
                    description: The start date for the order delivery period.
                    example: "2005-06-29"
                  endDate:
                    type: string
                    format: date
                    description: The end date for the order delivery period.
                    example: "2005-06-29"
                  supplier:
                    type: string
                    description: The name of the supplier.
                    example: "Consortial"
                  customer:
                    type: string
                    description: The name of the customer.
                    example: "IYT Corporation"
                  currency:
                    type: string
                    description: The currency in which the total amount is denominated.
                    example: "GBP"
                  totalAmount:
                    type: string
                    description: The total payable amount for the order.
                    example: "100.00"
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                          description: A description of the item in the order.
                          example: "Acme beeswax"
                        amount:
                          type: string
                          description: The total amount for the item.
                          example: "100.00"
        400:
          description: Invalid XML format
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message when the XML format is invalid.
                    example: "Invalid XML format"

  /invoiceV2/create:
    post:
      summary: Create an Invoice
      tags: 
        - invoiceV2
      description: Generates a UBL invoice XML from json invoice data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "12345"
                issueDate:
                  type: string
                  format: date
                  example: "2025-04-01"
                startDate:
                  type: string
                  format: date
                  example: "2025-03-01"
                endDate:
                  type: string
                  format: date
                  example: "2025-03-31"
                supplier:
                  type: string
                  example: "Custom Cotter Pins"
                customer:
                  type: string
                  example: "North American Veeblefetzer"
                totalAmount:
                  type: number
                  example: 100.00
                currency:
                  type: string
                  example: "CAD"
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        example: "Cotter pin, MIL-SPEC"
                      amount:
                        type: number
                        example: 100.00
      responses:
        "200":
          description: Successfully generated invoice XML
          content:
            application/xml:
              schema:
                type: string
        "400":
          description: Missing required invoice fields
        "500":
          description: Failed to generate invoice XML
  
  /invoiceV2/validate:
    post:
      summary: Validate an Invoice
      tags: 
        - invoiceV2
      description: Validates a invoice XML against UBL-Invoice-2.1 schema
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: string
      responses:
        "200":
          description: Invoice is valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Invalid XML or validation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                  messages:
                    type: array
                    items:
                      type: string
        "500":
          description: Server error


  /invoices:
    post:
      summary: Creates an invoice 
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/invoice"     
      responses:
        '200':
          description: Invoice created
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoiceId:
                    type: integer
        '401':
          description: Invalid token
    get:
      summary: Gets a list of all user’s invoice details
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/invoice"  
        '401':
          description: Invalid token

  /invoices/{invoiceId}:
    post:
      summary: Sends an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                email:
                  type: string
                message:
                  type: string
      responses:
        '200':
          description: Invoice sent
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId
          
    get:
      summary: Retrieves an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice"  
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

    put:
      summary: Edits an invoice 
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/invoice"
      responses:
        '200':
          description: Invoice updated
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

    delete:
      summary: Deletes an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice deleted
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /invoices/{invoiceId}/validate:
    get:
      summary: Validates an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of invoices retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  validationResults:
                    type: boolean
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /invoices/{invoiceId}/download:
    post:
      summary: Downloads an invoice
      tags:
        - Invoices
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: invoiceId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Invoice downloaded
        '401':
          description: Invalid token
        '400':
          description: Invalid invoiceId

  /contacts:
    post:
      summary: Creates a new contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                businessAddress:
                  type: string
                businessEmail:
                  type: string
                phoneNumber:
                  type: string
                abn:
                  type: string
      responses:
        '200':
          description: Contact created
          content:
            application/json:
              schema:
                type: object
                properties:
                  contactId:
                    type: string
        '401':
          description: Invalid token

  /contacts/{contactId}:
    put:
      summary: Edits a contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                businessName:
                  type: string
                businessAddress:
                  type: string
                businessEmail:
                  type: string
                phoneNumber:
                  type: string
                abn:
                  type: string
      responses:
        '200':
          description: Contact updated
        '401':
          description: Invalid token
        '400':
          description: Invalid contact details

    delete:
      summary: Deletes a contact
      tags:
        - Contacts
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact deleted
        '401':
          description: Invalid token
        '400':
          description: Invalid contactId
